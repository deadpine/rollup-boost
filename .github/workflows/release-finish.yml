name: Release Finish

#
# This workflow runs after every benchmark, to upload the report to S3.
#
# It is its own workflow and starts with a safety check, because PRs can contain malicious code and run in a context with secrets..
#
# See also https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
#

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  upload:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Safety check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |

          # Was triggering workflow triggered by a PR?

          PR_NUMBER=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
                      --jq '.pull_requests[0].number')

          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
            echo "No PR associated with this the triggering workflow run: ${{ github.event.workflow_run.id }}."
            exit 0
          fi

          # Were workflow files changed in the PR?

          CHANGED_FILES=$(gh api /repos/${{ github.repository }}/pulls/$PR_NUMBER/files --jq '.[].filename')

          echo -e "These files were modified in PR #$PR_NUMBER which triggered workflow run ${{ github.event.workflow_run.id }}:\n$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q "^\.github/workflows/"; then
            echo -e "\n## :x: Error\nWorkflow file change detected. Failing the workflow for security reasons." >> $GITHUB_STEP_SUMMARY

            curl --silent --data '{"text":"A workflow file change was included in <https://github.com/flashbots/rollup-boost/pull/'"$PR_NUMBER"'|PR '"$PR_NUMBER"'>."}' \
                -H "Content-type: application/json" -X POST $SLACK_WEBHOOK > /dev/null 2>&1

            exit 1
          else
            echo "No workflow file changes detected."
          fi

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Get tag version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Print version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Extract metadata (tags, labels) for Docker images
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: flashbots/rollup-boost
          tags: |
            type=sha
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ !contains(env.RELEASE_VERSION, '-') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.FLASHBOTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FLASHBOTS_DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
